[{"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\index.tsx":"1","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\reportWebVitals.ts":"2","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\App.tsx":"3","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\index.ts":"4","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Home\\index.tsx":"5","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test1\\index.tsx":"6","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\login\\index.ts":"7","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\testdata\\index.ts":"8","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\Menulist\\index.ts":"9","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test3\\index.tsx":"10","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test2\\index.tsx":"11","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Login\\Login.tsx":"12","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\LogoForm\\LogoForm.tsx":"13","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\registerForm\\registerForm.tsx":"14","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\utils\\loginForm.ts":"15","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\utils\\Message.ts":"16","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\router\\createrouter.tsx":"17","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\index.tsx":"18","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Todolist\\index.tsx":"19","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\todoRedicer.ts":"20","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\typings.ts":"21","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\children_Context\\index.tsx":"22"},{"size":540,"mtime":1611656336576,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1611040057677,"results":"25","hashOfConfig":"24"},{"size":308,"mtime":1611818467979,"results":"26","hashOfConfig":"24"},{"size":295,"mtime":1611406365288,"results":"27","hashOfConfig":"24"},{"size":2270,"mtime":1611798723969,"results":"28","hashOfConfig":"24"},{"size":743,"mtime":1611820243182,"results":"29","hashOfConfig":"24"},{"size":748,"mtime":1611643277351,"results":"30","hashOfConfig":"24"},{"size":5034,"mtime":1611406377016,"results":"31","hashOfConfig":"24"},{"size":7669,"mtime":1611651132947,"results":"32","hashOfConfig":"24"},{"size":146,"mtime":1611641000968,"results":"33","hashOfConfig":"24"},{"size":146,"mtime":1611641000973,"results":"34","hashOfConfig":"24"},{"size":3032,"mtime":1611221681437,"results":"35","hashOfConfig":"24"},{"size":2889,"mtime":1611654549151,"results":"36","hashOfConfig":"24"},{"size":5175,"mtime":1611215997522,"results":"37","hashOfConfig":"24"},{"size":704,"mtime":1611133131403,"results":"38","hashOfConfig":"24"},{"size":462,"mtime":1611124760984,"results":"39","hashOfConfig":"24"},{"size":846,"mtime":1611798744258,"results":"40","hashOfConfig":"24"},{"size":1643,"mtime":1611803407861,"results":"41","hashOfConfig":"24"},{"size":1729,"mtime":1611737990959,"results":"42","hashOfConfig":"24"},{"size":1135,"mtime":1611803427919,"results":"43","hashOfConfig":"24"},{"size":353,"mtime":1611736484331,"results":"44","hashOfConfig":"24"},{"size":324,"mtime":1611820259923,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11ucgyl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\index.tsx",[],["95","96"],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\reportWebVitals.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\App.tsx",["97","98"],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Home\\index.tsx",["99","100"],"import {FC, useState, useEffect,ReactElement} from \"react\"\r\nimport {Router, Route, Switch, Redirect,useHistory } from \"react-router-dom\" //引入react路由相关\r\nimport axios from \"axios\"\r\nconst Home: FC = () : ReactElement => {\r\n    let history = useHistory()\r\n    const routerswitch = (str: String): void => {\r\n        history.push(`/home/${str}`)\r\n        document.title = `/${str}`\r\n    }\r\n    let [routerlist, setlist] = useState([])\r\n    const runrouter = (): any => {\r\n        axios.get(\"/navlist\").then((res) => {\r\n            res.data.data.map((el: any) => {\r\n                el.component = require(`../${el.component}`).default\r\n            })\r\n            setlist(routerlist=res.data.data)\r\n            console.log(routerlist)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        runrouter()\r\n    },[])\r\n    return (\r\n        <div>\r\n\r\n            <hr/>\r\n            <ul>\r\n                <li\r\n                    onClick={() => {\r\n                        routerswitch(\"atest1\")\r\n                    }}>\r\n                    atest1\r\n                </li>\r\n                <br/>\r\n\r\n                <li\r\n                    onClick={() => {\r\n                        routerswitch(\"btest2\")\r\n                    }}>\r\n                    btest2\r\n                </li>\r\n                <br/>\r\n                <li\r\n                    onClick={() => {\r\n                        routerswitch(\"ctest3\")\r\n                    }}>\r\n                    ctest3\r\n                </li>\r\n            </ul>\r\n            <br/>\r\n            <div>\r\n                <Router history={history}>\r\n                    <Switch>\r\n                    <Route path='/' exact render={() => <Redirect to='/home'/>}/>\r\n                    {\r\n                        routerlist.map((item: any) => {\r\n                            return (\r\n                                <Route\r\n                                    key={item.path}\r\n                                    path={item.path}\r\n                                    component={item.component}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Home\r\n","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test1\\index.tsx",["101"],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\login\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\testdata\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\mock\\Menulist\\index.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test3\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Test2\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Login\\Login.tsx",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\LogoForm\\LogoForm.tsx",["102"],"import React, {FC} from 'react';\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport {Rules} from '../../utils/loginForm'\r\nimport axios from 'axios'\r\nimport {Antdsuccess,Antderror} from '../../utils/Message'\r\nimport {createBrowserHistory} from 'history'\r\n\r\nconst LoginForm: FC = (props) => {\r\n    const history = createBrowserHistory()\r\n    const layout = {\r\n        labelCol: {span: 6},\r\n        wrapperCol: {span: 14},\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: {offset: 6, span: 16},\r\n    };\r\n    const btnLatout = {\r\n        wrapperCol: {offset: 6, span: 14}\r\n    }\r\n    const onFinish = (values: any) => {\r\n        console.log(values)\r\n        axios\r\n            .post(\"/userLogin/login\", {\r\n                username: values.email,\r\n                password: values.password,\r\n            })\r\n            .then((res) => {\r\n                if (res.data === \"登录成功\") {\r\n                    Antdsuccess(\"登录成功\", 2);\r\n                    window.location.href = '/home/ctest3'\r\n                } else if (res.data === \"用户不存在\") {\r\n                    Antderror(res.data, 1);\r\n                } else if (res.data === \"密码错误\") {\r\n                    Antderror(res.data, 1);\r\n                }\r\n            });\r\n\r\n    };\r\n\r\n    const btnstyle = {\r\n        width: '100%'\r\n    }\r\n    return (\r\n        <div className=\"loginForm\">\r\n            <Form\r\n                {...layout}\r\n                autoComplete=\"off\"\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                    email:'754417575@qq.com',\r\n                    password:'123456',\r\n                    remember: true\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    label=\"邮箱\"\r\n                    name=\"email\"\r\n                    rules={[{\r\n                        type: 'email',\r\n                        required: true,\r\n                        message: '邮箱格式不正确'\r\n                    }, ...Rules.email]}\r\n                >\r\n                    <Input allowClear placeholder='请输入邮箱账户'/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={Rules.password}\r\n                >\r\n                    <Input.Password placeholder='请输入密码' allowClear/>\r\n                </Form.Item>\r\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n                    <Checkbox>记住密码</Checkbox>\r\n                </Form.Item>\r\n                <Form.Item {...btnLatout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" style={btnstyle}>\r\n                        登录\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginForm","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\registerForm\\registerForm.tsx",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\utils\\loginForm.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\utils\\Message.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\router\\createrouter.tsx",["103"],"// import {Router, Switch, Route, Redirect,useHistory} from 'react-router-dom'\r\nimport {Router, Route, Switch, Redirect,useHistory } from \"react-router-dom\" //引入react路由相关\r\nimport {createBrowserHistory} from 'history'\r\nimport Login from \"../views/Login/Login\";\r\nimport Home from '../views/Home/index'\r\nimport Todolist from \"../views/Todolist/index\";\r\n\r\nfunction CreateRouter() {\r\n    const history = createBrowserHistory()\r\n    return (\r\n        <Router history={history}>\r\n            <Switch>\r\n                <Route path='/' exact render={() => <Redirect to='/Login'/>}/>\r\n                <Route path='/login' component={Login}/>\r\n                <Route path='/home' component={Home}/>\r\n                <Route path='/todolist' component={Todolist}/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default CreateRouter","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\index.tsx",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\Todolist\\index.tsx",["104"],"import {FC, ReactElement, useCallback, useEffect, useReducer, useState} from 'react'\r\nimport Todolistzj from \"../../components/Todolist\";\r\nimport {Itodo, Istate, TodoAction} from \"../../components/Todolist/typings\";\r\nimport {todoReducer} from \"../../components/Todolist/todoRedicer\";\r\n\r\nconst Todolist: FC = (): ReactElement => {\r\n    /*\r\n    * todo useReducer 的用法和意义 相对于 useState 更高级的解决方案\r\n    *\r\n    * todo useReducer惰性初始化值 使用惰性初始化时需要传入第三个参数， 为初始化值的函数\r\n    *  usereducer用法\r\n    * */\r\n    // const initialState: Istate = {\r\n    //     todolist: []\r\n    // }\r\n    //\r\n    function inittodolist (initTodolist: Itodo[]): Istate {\r\n        return {\r\n            todolist: initTodolist\r\n        }\r\n    }\r\n    // 在创建reducer 时就会创建对应的 初始化值\r\n    const [state, dispath] = useReducer(todoReducer, [],inittodolist)\r\n    //todo 建议，如果子组件中的函数方法是从父组件中传递过来的话， 就需要使用useCallback()  进行包裹一下， useCallback需要两个参数，第二个默认传空数组\r\n    const addTodo = useCallback((obj: Itodo) => {\r\n        dispath({\r\n            type: TodoAction.ADD_TODO,\r\n            payload:obj\r\n        });\r\n    }, [])\r\n    const dltTodos = useCallback((id: string) => {\r\n        dispath({\r\n            type: TodoAction.REMOVE_TODO,\r\n            payload:id as string\r\n        });\r\n    },[])\r\n    useEffect(() => {\r\n        console.log(state.todolist)\r\n    }, [state.todolist])\r\n    return (\r\n        <div>\r\n            <Todolistzj addTodo={addTodo} Todolist={state.todolist} dltTodo={dltTodos}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Todolist","C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\todoRedicer.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\components\\Todolist\\typings.ts",[],"C:\\Users\\Administrator\\Desktop\\React组件系统\\后台管理系统\\src\\views\\children_Context\\index.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":29},{"ruleId":"109","severity":1,"message":"113","line":1,"column":31,"nodeType":"111","messageId":"112","endLine":1,"endColumn":39},{"ruleId":"114","severity":1,"message":"115","line":13,"column":41,"nodeType":"116","messageId":"117","endLine":13,"endColumn":43},{"ruleId":"118","severity":1,"message":"119","line":23,"column":7,"nodeType":"120","endLine":23,"endColumn":9,"suggestions":"121"},{"ruleId":"109","severity":1,"message":"122","line":6,"column":16,"nodeType":"111","messageId":"112","endLine":6,"endColumn":22},{"ruleId":"109","severity":1,"message":"123","line":9,"column":11,"nodeType":"111","messageId":"112","endLine":9,"endColumn":18},{"ruleId":"109","severity":1,"message":"124","line":2,"column":41,"nodeType":"111","messageId":"112","endLine":2,"endColumn":51},{"ruleId":"109","severity":1,"message":"113","line":1,"column":63,"nodeType":"111","messageId":"112","endLine":1,"endColumn":71},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runrouter'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'setnum' is assigned a value but never used.","'history' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [runrouter]",{"range":"130","text":"131"},[800,802],"[runrouter]"]